---
interface Props {
  noScroll?: boolean
}

const {noScroll} = Astro.props

const navLinks = {
  1: {
    href: '/#about',
    text: 'О нас',
  },
}
import {contactContent} from '../pages/contacts.astro'

export const grayBody = 'rounded-lg border-[1px] border-neutral-700 bg-[#111] text-neutral-500 text-white'
---

<header class="z-50 flex sm:flex-col gap-5 sm:gap-2 fixed left-[50%] top-12 duration-300 sm:top-4 w-fit -translate-x-[50%]">
  <div class="flex items-center gap-6 p-2 text-base sm:justify-between" class:list={[grayBody, noScroll && '!left-[49.57%]']}>
    <a href="/" class="mt-[2px] ml-2 text-lg font-bold uppercase sm:ml-0 text-neutral-500 hover:text-custom-yellow duration-200 sm:px-3 sm:py-1 sm:text-white">Аналитик</a>

    {
      Object.values(navLinks).map(({href, text}) => (
        <a {href} rel="nofollow" class="block overflow-hidden sm:hidden">
          <div class="h-[20px] hover:translate-y-[-20px] duration-300">
            <span class="flex xl:min-w-12 sm:min-w-0 h-[20px] items-center">{text}</span>
            <span class="flex xl:min-w-12 sm:min-w-0 h-[20px] items-center text-custom-yellow">{text}</span>
          </div>
        </a>
      ))
    }

    <button onclick="window.location.href = '/#consultation'" class="">Записаться</button>
  </div>

  <div class="flex items-center gap-6 py-2 px-3.5 text-base sm:text-xs duration-300 sm:top-4 sm:justify-between" class:list={[grayBody, noScroll && '!left-[49.57%]']}>
    {
      Object.values(contactContent.links).map(({title, href}) => (
        <a {href} rel="nofollow" class="block overflow-hidden">
          <div class="h-[20px] sm:h-auto hover:translate-y-[-20px] duration-300">
            <span class="flex xl:min-w-44 sm:min-w-0 h-[20px] items-center sm:items-baseline sm:h-auto text-neutral-500 ">{title}</span>
            <span class="sm:hidden flex xl:min-w-44 sm:min-w-0 h-[20px] items-center text-custom-yellow">{title}</span>
          </div>
        </a>
      ))
    }
  </div>
</header>

<script>
  const header = document.querySelector('header')
  let scroll_time
  let scroll_pos = 0

  function hideHeader() {
    clearTimeout(scroll_time)
    const current_scroll = window.pageYOffset || document.documentElement.scrollTop

    if (header && current_scroll >= header.offsetHeight) {
      const shouldAddClass = current_scroll > scroll_pos
      header.classList.toggle('-translate-y-32', shouldAddClass)
      console.log('toggle')
    }

    scroll_time = setTimeout(() => {
      scroll_pos = window.pageYOffset || document.documentElement.scrollTop
    }, 100)
  }

  import {isMobile} from '@bozzhik/is-mobile'

  if (isMobile) {
    window.addEventListener('scroll', hideHeader)
  }
</script>

<style>
  button {
    @apply relative z-0 flex items-center gap-2 overflow-hidden whitespace-nowrap rounded-lg border-[1px]
         border-neutral-700 px-4 py-1.5 font-medium
         text-neutral-300  transition-all duration-300;
  }

  button:before {
    @apply absolute inset-0
           -z-10 translate-y-[200%]
           scale-[2.5]
           rounded-[100%] bg-custom-yellow
           transition-transform duration-1000
           content-[""];
  }

  button:hover {
    @apply scale-105 border-custom-yellow text-neutral-900;
  }

  button:hover:before {
    @apply translate-y-[0%];
  }

  button:active {
    @apply scale-100;
  }
</style>
